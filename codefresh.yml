version: "1.0"
stages:
  - "clone"
  - "unit"
  - "build"
  - "integration"
  - "shared-volume"
  - "deploy"
  - "approval"
  - "prod-deploy"

steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_REVISION}}"
    stage: "clone"

  build_dev_image:
    title: "Building Dev image"
    type: "build"
    image_name: "ahromis/demochat"
    working_directory: "${{clone}}"
    tag: "dev"
    dockerfile: "Dockerfile.dev"
    stage: "unit"

  test:
    title: "Running unit tests"
    type: "freestyle"
    image: ${{build_dev_image}}
    working_directory: /root/demochat
    commands:
      - 'npm run test'
    stage: "unit"

  build_image:
    title: "Building App image"
    type: "build"
    image_name: "ahromis/demochat"
    working_directory: "${{clone}}"
    tag: "dev"
    dockerfile: "Dockerfile"
    stage: "build"

  integration_step:
    title: "Running integration tests"
    type: composition
    stage: 'integration'
    composition:
      version: '2'
      services:
        app:
          image: ${{build_image}}
          links:
            - mongo
          ports:
            - 5000
        mongo:
          image: mongo
    composition-candidates:
      main:
        image: nhoag/curl
        command: bash -c "sleep 30 && curl http://app:5000/" | echo 'works'

  copy_to_shared_volume:
    title: "Copy file to shared volume"
    type: "freestyle"
    image: alpine:3.9
    working_directory: "${{clone}}"
    commands:
      - ls -l /codefresh/volume/
      - cp ./deploy/deployment.yml /codefresh/volume/deployment.yml
      - cp ./deploy/deployment.prod.yml /codefresh/volume/deployment.prod.yml
    stage: "shared-volume"

  kube_deploy:
    title: "Deploying to staging environment"
    type: deploy
    kind: kubernetes
    cluster: k3s
    namespace: qa-demochat
    file_path: ./deployment.yml
    stage: "deploy"

  step_name:
    type: pending-approval
    title: "Pending approval"
    timeout:
      duration: 8
      finalState: approved
    when:
      branch:
        only: [ kickabout ]
    stage: "approval"

  kube_prod_deploy:
    title: "Deploying to production environment"
    type: deploy
    kind: kubernetes
    cluster: k3s
    namespace: prod-demochat
    file_path: ./deployment.prod.yml
    stage: "prod-deploy"


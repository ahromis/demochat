version: "1.0"
stages:
  - "clone"
#  - "unit"
  - "build"
#  - "integration"
  - "store"
#  - "staging"
  - "prod"

steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_REVISION}}"
    stage: "clone"

#  build_dev_image:
#    title: "Building Dev image"
#    type: "build"
#    image_name: "ahromis/demochat"
#    working_directory: "${{clone}}"
#    tag: "dev"
#    dockerfile: "Dockerfile.dev"
#    stage: "unit"

#  test:
#    title: "Running unit tests"
#    type: "freestyle"
#    image: ${{build_dev_image}}
#    working_directory: /root/demochat
#    commands:
#      - 'npm run test'
#    stage: "unit"

  build_image:
    title: "Building App image"
    type: "build"
    image_name: "ahromis/demochat"
    working_directory: "${{clone}}"
    tags:
      - "${{CF_SHORT_REVISION}}"
      - kickabout
      - latest
    dockerfile: "Dockerfile"
    stage: "build"

#  integration_step:
#    title: "Running integration tests"
#    type: composition
#    stage: 'integration'
#    composition:
#      version: '2'
#      services:
#        app:
#          image: ${{build_image}}
#          links:
#            - mongo
#          ports:
#            - 5000
#        mongo:
#          image: mongo
#    composition-candidates:
#      main:
#        image: nhoag/curl
#        command: bash -c "sleep 30 && curl http://app:5000/" | echo 'works'

  storeChart:
    title: Storing Helm chart
    type: helm
    stage: store
    working_directory: ./demochat
    arguments:
      action: push
      chart_name: charts/demochat
      helm_version: 3.0.3
      chart_repo_url: 'cm://h.cfcr.io/deerwald/default'

#  deployStaging:
#    title: Deploying to Staging
#    type: helm
#    stage: staging
#    working_directory: "${{clone}}"
#    arguments:
#      action: install
#      chart_name: charts/demochat
#      release_name: demochat-staging
#      helm_version: 3.0.3
#      kube_context: 'gke_codefresh-309818_us-central1-c_codefresh'
#      namespace: demochat-staging
#      custom_value_files:
#      - ./charts/demochat/values.qa.yaml
#      custom_values:
#       - 'image_tag=${{CF_SHORT_REVISION}}'
#    env:
#      name: Demochat Staging
#      endpoints:
#      - name: app
#        url: https://demochat.qa.deerwald.com
#      type: helm-release
#      change: '${{CF_COMMIT_MESSAGE}}'
#      filters:
#      - cluster: gke_codefresh-309818_us-central1-c_codefresh
#        namespace: demochat-staging

#  testStaging:
#    title: Smoke test staging
#    type: helm
#    stage: staging
#    working_directory: "${{clone}}"
#    arguments:
#      action: test
#      chart_name: charts/demochat
#      release_name: demochat-staging
#      helm_version: 3.0.3
#      kube_context: 'gke_codefresh-309818_us-central1-c_codefresh'
#      namespace: demochat-staging
#      custom_value_files:
#      - ./charts/demochat/values.qa.yaml
#      custom_values:
#       - 'image_tag=${{CF_SHORT_REVISION}}'

  deployProd:
    title: Sync application with ArgoCD
    type: argocd-sync
    stage: prod
    arguments:
      context: argocd.deerwald.com
      app_name: demochat-prod
